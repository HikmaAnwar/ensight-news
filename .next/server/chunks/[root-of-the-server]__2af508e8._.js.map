{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Documents/GitHub/ensight-news/src/lib/constants.ts"],"sourcesContent":["export const BASE_URL = \"https://ensight-backend.onrender.com\";\n"],"names":[],"mappings":";;;AAAO,MAAM,WAAW","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/HP/Documents/GitHub/ensight-news/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { BASE_URL } from \"@/lib/constants\";\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { email, password } = await req.json();\n\n    if (!email || !password) {\n      return NextResponse.json(\n        { message: \"Email and password are required\" },\n        { status: 400 }\n      );\n    }\n\n    const response = await fetch(`${BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      return NextResponse.json(\n        { message: errorData.message || \"Login failed\" },\n        { status: response.status }\n      );\n    }\n\n    const data = await response.json();\n    return NextResponse.json(\n      { user: data.user, token: data.access_token },\n      { status: 200 }\n    );\n    //eslint-disable-next-line\n  } catch (error: any) {\n    console.error(\"Login error:\", error);\n    return NextResponse.json(\n      {\n        message: \"Internal Server Error\",\n        error: error?.message || String(error),\n      },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE1C,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAAkC,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,WAAW,MAAM,MAAM,GAAG,yHAAA,CAAA,WAAQ,CAAC,WAAW,CAAC,EAAE;YACrD,QAAQ;YACR,SAAS;gBACP,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAAY,MAAM,SAAS,IAAI;YACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS,UAAU,OAAO,IAAI;YAAe,GAC/C;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAE9B;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,MAAM,KAAK,IAAI;YAAE,OAAO,KAAK,YAAY;QAAC,GAC5C;YAAE,QAAQ;QAAI;IAEhB,0BAA0B;IAC5B,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO,OAAO,WAAW,OAAO;QAClC,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}